"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var AppComponent = /** @class */ (function () {
    function AppComponent() {
        this.blocks = [0, 1, 2, 3, 4, 5, 6, 7];
        this.size = 50;
        this.halfSize = this.size / 2;
        this.selected = false;
    }
    AppComponent.prototype.ngOnInit = function () {
        this.itemContainer = this.container.nativeElement;
        this.dragImageItem = this.dragImage.nativeElement;
        this.dragImageItem.translateX = 0;
        this.dragImageItem.translateY = 0;
        this.dragImageItem.scaleX = 0.5;
        this.dragImageItem.scaleY = 0.5;
    };
    AppComponent.prototype.onTouch = function (args, row, col) {
        console.log("Action is " + args.action + " on row " + row + " and col " + col);
        // console.log(this.isTrue);
        // this.isTrue[row][col] = true;
        // console.log(this.isTrue[row][col]);
    };
    AppComponent.prototype.onPan = function (args) {
        var x, y;
        var cell;
        if (this.size > 0) {
            x = Math.floor((args.view.translateX + this.halfSize) / this.size);
            y = Math.floor((args.view.translateY + this.halfSize) / this.size);
            cell = [x, y];
        }
        // console.log("Pana: [" + args.deltaX + ", " + args.deltaY + "] state: " + args.state);
        // console.log("Pana: [" + args.view.translateX + ", " + args.view.translateY + "]");
        console.log(cell);
        if (args.state === 1) {
            this.selected = false;
            this.dragImageItem.scaleX = 1;
            this.dragImageItem.scaleY = 1;
            this.prevDeltaX = 0;
            this.prevDeltaY = 0;
            this.dragImageItem.translateX = 0;
            this.dragImageItem.translateY = 50;
        }
        else if (args.state === 2) {
            this.selected = true;
            this.rowN = cell[1];
            this.colN = cell[0];
            this.dragImageItem.scaleX = 1;
            this.dragImageItem.scaleY = 1;
            this.dragImageItem.translateX += args.deltaX - this.prevDeltaX;
            this.dragImageItem.translateY += args.deltaY - this.prevDeltaY;
            if (this.dragImageItem.translateX < 0) {
                this.dragImageItem.translateX = 0;
            }
            if (this.dragImageItem.translateX > 350) {
                this.dragImageItem.translateX = 350;
            }
            if (this.dragImageItem.translateY < 0) {
                this.dragImageItem.translateY = 0;
            }
            if (this.dragImageItem.translateY > 350) {
                this.dragImageItem.translateY = 350;
            }
            this.prevDeltaX = args.deltaX;
            this.prevDeltaY = args.deltaY;
        }
        else if (args.state === 3) {
            this.selected = false;
            this.dragImageItem.scaleX = 1;
            this.dragImageItem.scaleY = 1;
        }
    };
    __decorate([
        core_1.ViewChild("dragImage"),
        __metadata("design:type", core_1.ElementRef)
    ], AppComponent.prototype, "dragImage", void 0);
    __decorate([
        core_1.ViewChild("container"),
        __metadata("design:type", core_1.ElementRef)
    ], AppComponent.prototype, "container", void 0);
    AppComponent = __decorate([
        core_1.Component({
            selector: "my-app",
            templateUrl: "./app.component.html",
            styleUrls: ["./app.component.css"]
        })
    ], AppComponent);
    return AppComponent;
}());
exports.AppComponent = AppComponent;
//# sourceMappingURL=data:application/json;base64,